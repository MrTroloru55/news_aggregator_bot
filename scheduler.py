# scheduler.py
# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (apscheduler) –¥–ª—è —Å–±–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from collector import collect_posts, client
from config import OWNER_ID
from bot import bot

scheduler = AsyncIOScheduler()

async def send_news():
    """–°–æ–±–∏—Ä–∞–µ–º –ø–æ—Å—Ç—ã —Å –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –æ–¥–∏–Ω –¥–∞–π–¥–∂–µ—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü—É"""
    posts = await collect_posts(limit=15)

    if not posts:
        await bot.send_message(OWNER_ID, "–°–µ–≥–æ–¥–Ω—è –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.")
        return

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ –∫–∞–Ω–∞–ª–∞–º
    from collections import defaultdict
    channel_posts = defaultdict(list)
    for p in posts:
        channel_posts[p['channel']].append(p['text'][:200])  # –æ–±—Ä–µ–∑–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏

    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–π–¥–∂–µ—Å—Ç
    digest = "üì∞ *–ù–æ–≤–æ—Å—Ç–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*\n\n"
    for channel, msgs in channel_posts.items():
        digest += f"üìå *{channel}*\n"
        for msg in msgs:
            digest += f"- {msg}\n"
        digest += "\n"
        await asyncio.sleep(1)  # –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await bot.send_message(OWNER_ID, digest, parse_mode="Markdown")

def setup_scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"""
    scheduler.add_job(send_news, "cron", hour=9)   # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 9:00
    scheduler.add_job(send_news, "cron", hour=18)  # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 18:00
    scheduler.start()
