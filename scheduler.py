# scheduler.py
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from collector import collect_posts
from config import OWNER_ID
import asyncio
from aiogram import Bot
from collections import defaultdict

scheduler = AsyncIOScheduler()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
BLACKLIST = ['@concertzaal']

def remove_blacklist_words(text: str) -> str:
    """–£–¥–∞–ª—è–µ—Ç —Å–ª–æ–≤–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."""
    if not text:
        return ""
    for word in BLACKLIST:
        text = text.replace(word, '').strip()
    return text

async def send_news(bot: Bot):
    print("–ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π...")
    posts = await collect_posts(limit=3)

    if not posts:
        await bot.send_message(OWNER_ID, "–°–µ–≥–æ–¥–Ω—è –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.")
        print("–ù–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    print(f"–ù–∞–π–¥–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤. –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É...")

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ –∫–∞–Ω–∞–ª–∞–º
    channel_posts = defaultdict(list)
    for p in posts:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        p['text'] = remove_blacklist_words(p['text'])
        channel_posts[p['channel']].append(p)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–π–¥–∂–µ—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    for channel, posts_list in channel_posts.items():
        digest = f"üìå *{channel}*\n\n"
        current_digest_length = len(digest)
        
        for post in posts_list:
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ
            if len(digest.strip()) > 0:
                text_to_add = "-------------------\n"
            else:
                text_to_add = ""

            text_to_add += f"- {post['text']}\n"
            if len(text_to_add.strip()) > 0:
                text_to_add += "\n"

            if current_digest_length + len(text_to_add) > 4000:
                await bot.send_message(OWNER_ID, digest, parse_mode="Markdown")
                await asyncio.sleep(1)
                digest = f"üìå *{channel}* (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)\n\n"
                current_digest_length = len(digest)

            digest += text_to_add
            current_digest_length += len(text_to_add)

        if len(digest.strip()) > 0:
            await bot.send_message(OWNER_ID, digest, parse_mode="Markdown")
            await asyncio.sleep(1)

    print("–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
            
def setup_scheduler(bot: Bot):
    scheduler.add_job(send_news, "interval", minutes=2, args=[bot])
    scheduler.start()